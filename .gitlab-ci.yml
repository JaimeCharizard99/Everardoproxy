variables:
    APIGEE_ORG: "bjuarezintacademy"
    APIGEE_ENV: "eval"
    EVAL_HOST: 34.36.220.25.nip.io
    TOKEN: $TOKEN
    GOOGLE_CLOUD_PROJECT: $GOOGLE_CLOUD_PROJECT
    GOOGLE_CLOUD_PROJECT_NUMBER: $GOOGLE_CLOUD_PROJECT_NUMBER
    SERVICE_ACCOUNT_EMAIL: "sa-gitlab-pipeline@bjuarezintacademy.iam.gserviceaccount.com"
    CHILD_PIPELINE_EXECUTION_CONTEXT: "/"

image: maven:latest
# GCP_SERVICE_ACCOUNT is stored in Gitlab CI/CD variable settings
# GCP_SERVICE_ACCOUNT variable, type file :O

cache:
    paths:
        - $CHILD_PIPELINE_EXECUTION_CONTEXT/.m2/repository/
        - $CHILD_PIPELINE_EXECUTION_CONTEXT/target/
        - $CHILD_PIPELINE_EXECUTION_CONTEXT/node_modules/

before_script:
    - "echo Running child pipeline in subdirectory: $CHILD_PIPELINE_EXECUTION_CONTEXT"
    - pwd
    - ls
    - cd $CHILD_PIPELINE_EXECUTION_CONTEXT
    - ls

stages:
    - auth
    - install-dependencies
    - deploy

#get token
auth:
    stage: auth
    image: "google/cloud-sdk:slim"
    id_tokens:
        GITLAB_OIDC_TOKEN:
            aud: https://iam.googleapis.com/projects/$GOOGLE_CLOUD_PROJECT_NUMBER/locations/global/workloadIdentityPools/gitlab2/providers/gitlab2
    script:
        - |
            echo "$GITLAB_OIDC_TOKEN" > token.txt
            gcloud iam workload-identity-pools create-cred-config \
            projects/$GOOGLE_CLOUD_PROJECT_NUMBER/locations/global/workloadIdentityPools/gitlab2/providers/gitlab2 \
            --service-account=sa-gitlab-pipeline@bjuarezintacademy.iam.gserviceaccount.com \
            --service-account-token-lifetime-seconds=3600 \
            --output-file=$CI_PROJECT_DIR/credentials.json \
            --credential-source-file=token.txt
        - "gcloud config set project $GOOGLE_CLOUD_PROJECT"
        - "gcloud config set account $SERVICE_ACCOUNT_EMAIL"
        - "export GOOGLE_APPLICATION_CREDENTIALS=$CI_PROJECT_DIR/credentials.json"
        - "gcloud auth login --cred-file=$CI_PROJECT_DIR/credentials.json"
        - "export TOKEN=$(gcloud auth print-access-token)"
        - "echo $TOKEN"

# install dependencies
install-dependencies:
    stage: install-dependencies
    image: node:12-alpine
    script:
        - npm install --silent --no-fund
        - pwd
        - ls

# Deploy Proxy
mvn-package:
    stage: deploy
    script:
        - if [ "$AUTHOR_EMAIL" == ""]; then AUTHOR_EMAIL="$GITLAB_USER_EMAIL"; fi
        - mvn process-resources -Pgoogleapi -Dcommit=$GIT_COMMIT -Dbranch=$GIT_BRNACH -Dauthor=$AUTHOR_EMAIL -Ddeployment.suffix=$APIGEE_DEPLOYMENT_SUFFIX

mvn-config:
    stage: deploy
    needs: ["mvn-package"]
    script:
        - mvn apigee-enterprise:configure -Pgoogleapi -Dorg=$GOOGLE_CLOUD_PROJECT -Denv=$APIGEE_ENV -Ddeployment.suffix=$APIGEE_DEPLOYMENT_SUFFIX

mvn-deploy-proxy:
    stage: deploy
    needs: ["mvn-config"]
    script:
        - mvn apigee-enterprise:deploy -Pgoogleapi -Pdeployonly install -Dapigee.config.options=create -Denv=$APIGEE_ENV -Dtoken=$TOKEN -Dorg=$GOOGLE_CLOUD_PROJECT -Ddeployment.suffix=$APIGEE_DEPLOYMENT_SUFFIX
